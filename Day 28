* 
* * 
* * * 
* * * * 
* * * * *
* * * *
* * *
* *
*
class Solution:

    def printTriangle(self, N):

       for i in range(1,N+1):

           for j in range(i):

               print(end="* ")

           print()

       for i in range(N,1,-1):

           for j in range(1,i):

               print(end="* ")

           print()
if __name__ == '__main__':

    t = int(input())

    for _ in range(t):

        N = int(input().strip())

        ob = Solution()

        ob.printTriangle(N)

# } Driver Code Ends
1 
0 1 
1 0 1
0 1 0 1 
1 0 1 0 1
class Solution:

    def printTriangle(self, N):
        
        for i in range(1, N + 1):

            for j in range(1, i + 1):

                if (i + j) % 2 == 0:

                    print("1", end=" ")

                else:

                    print("0", end=" ")

            print()

if __name__ == '__main__':

    t = int(input())

    for _ in range(t):

        N = int(input().strip())

        ob = Solution()

        ob.printTriangle(N)

