/*
1
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
*/

class Solution:

    def printTriangle(self, N):

        for i in range(1,N+1):

            for j in range(1,i+1):

                print(j,end=" ")

            print()

if __name__ == '__main__':

    t = int(input())

    for _ in range(t):

        N = int(input())

        ob = Solution()

        ob.printTriangle(N)

/*
1
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5
*/

class Solution:

    def printTriangle(self, N):

        for i in range(1,N+1):

            for j in range(1,i+1):

                print(i,end=" ")

            print()
if __name__ == '__main__':

    t = int(input())

    for _ in range(t):

        N = int(input())

        ob = Solution()

        ob.printTriangle(N)

/*
* * * * *
* * * * 
* * * 
* *  
* 
*/
class Solution:

    def printTriangle(self, N):

        for i in range(N,0,-1):

            for j in range(i):

                print("* ",end="")

            print()

if __name__ == '__main__':

    t = int(input())

    for _ in range(t):

        N = int(input())

        ob = Solution()

        ob.printTriangle(N)

/*
1 2 3 4 5
1 2 3 4
1 2 3 
1 2  
1 
*/

class Solution:

    def printTriangle(self, N):

        for i in range(N,0,-1):

            for j in range(1,i+1):

                print(j,end=" ")

            print()

if __name__ == '__main__':

    t = int(input())

    for _ in range(t):

        N = int(input())

        ob = Solution()

        ob.printTriangle(N)

